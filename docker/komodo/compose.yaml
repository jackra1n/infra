services:
  mongo:
    image: mongo:8.0.12
    container_name: komodo-mongo
    command: --quiet --wiredTigerCacheSizeGB 0.25
    restart: unless-stopped
    volumes:
      - ./mongo/db:/data/db
      - ./mongo/config:/data/configdb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${KOMODO_DB_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${KOMODO_DB_PASSWORD}
    labels:
      komodo.skip:  # Prevent Komodo from stopping with StopAllContainers

  core:
    image: ghcr.io/moghtech/komodo-core:1.19.0
    container_name: komodo-core
    restart: unless-stopped
    depends_on:
      - mongo
    ports:
      - 9120:9120
    env_file: ./.env
    environment:
      KOMODO_DATABASE_ADDRESS: mongo:27017
      KOMODO_DATABASE_USERNAME: ${KOMODO_DB_USERNAME}
      KOMODO_DATABASE_PASSWORD: ${KOMODO_DB_PASSWORD}
    volumes:
      - ./core/repos:/repo-cache
    labels:
      komodo.skip:  # Prevent Komodo from stopping with StopAllContainers

  periphery:
    image: ghcr.io/moghtech/komodo-periphery:1.19.0
    container_name: komodo-periphery
    restart: unless-stopped
    env_file: ./.env
    volumes:
      ## Mount external docker socket
      - /var/run/docker.sock:/var/run/docker.sock
      ## Allow Periphery to see processes outside of container
      - /proc:/proc
      ## Specify the Periphery agent root directory - must be the same inside and outside the container.
      - ${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}:${PERIPHERY_ROOT_DIRECTORY:-/etc/komodo}
      ## Custom location for docker compose repo
      - ${PERIPHERY_ADDITIONAL_DIRECTORY}:${PERIPHERY_ADDITIONAL_DIRECTORY}
    labels:
      komodo.skip:  # Prevent Komodo from stopping with StopAllContainers
